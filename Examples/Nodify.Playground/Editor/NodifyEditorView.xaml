<UserControl
    x:Class="Nodify.Playground.NodifyEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gif="http://wpfanimatedgif.codeplex.com"
    xmlns:local="clr-namespace:Nodify.Playground"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nodify="https://miroiu.github.io/nodify"
    xmlns:shared="clr-namespace:Nodify;assembly=Nodify.Shared"
    d:DataContext="{d:DesignInstance Type=local:NodifyEditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="{DynamicResource NodifyEditor.BackgroundBrush}"
    mc:Ignorable="d">



    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries />
            <shared:RandomBrushConverter x:Key="RandomBrushConverter" />
            <local:FlowToDirectionConverter x:Key="FlowToDirectionConverter" />

            <LinearGradientBrush x:Key="AnimatedBrush" StartPoint="0 0" EndPoint="1 0">
                <GradientStop Offset="0" Color="#6366f1" />
                <GradientStop Offset="0.5" Color="#a855f7" />
                <GradientStop Offset="1" Color="#ec4899" />
            </LinearGradientBrush>

            <GeometryDrawing
                x:Key="SmallGridGeometry"
                Brush="{DynamicResource GridLinesBrush}"
                Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z" />

            <GeometryDrawing
                x:Key="LargeGridGeometry"
                Brush="{DynamicResource GridLinesBrush}"
                Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z" />

            <DrawingBrush
                x:Key="SmallGridLinesDrawingBrush"
                Drawing="{StaticResource SmallGridGeometry}"
                TileMode="Tile"
                Transform="{Binding ViewportTransform, ElementName=Editor}"
                Viewport="{Binding GridSpacing, Source={x:Static local:EditorSettings.Instance}, Converter={local:UIntToRectConverter}}"
                ViewportUnits="Absolute" />

            <DrawingBrush
                x:Key="LargeGridLinesDrawingBrush"
                Drawing="{StaticResource LargeGridGeometry}"
                Opacity="0.5"
                TileMode="Tile"
                Transform="{Binding ViewportTransform, ElementName=Editor}"
                Viewport="{Binding GridSpacing, Source={x:Static local:EditorSettings.Instance}, Converter={local:UIntToRectConverter Multiplier=10}}"
                ViewportUnits="Absolute" />

            <SolidColorBrush x:Key="SquareConnectorColor" Color="MediumSlateBlue" />
            <SolidColorBrush x:Key="TriangleConnectorColor" Color="MediumVioletRed" />

            <UIElement x:Key="ConnectionAnimationPlaceholder" Opacity="1" />

            <Storyboard x:Key="HighlightConnection">
                <DoubleAnimation
                    Storyboard.TargetProperty="StrokeThickness"
                    From="3"
                    To="6"
                    Duration="0:0:0.3" />
                <DoubleAnimation
                    Storyboard.Target="{StaticResource ConnectionAnimationPlaceholder}"
                    Storyboard.TargetProperty="(UIElement.Opacity)"
                    From="1"
                    To="0.3"
                    Duration="0:0:0.3" />
            </Storyboard>

            <Style x:Key="ConnectionStyle" TargetType="{x:Type nodify:BaseConnection}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Input.Shape}" Value="{x:Static local:ConnectorShape.Square}">
                        <Setter Property="Stroke" Value="{StaticResource SquareConnectorColor}" />
                        <Setter Property="Fill" Value="{StaticResource SquareConnectorColor}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Input.Shape}" Value="{x:Static local:ConnectorShape.Triangle}">
                        <Setter Property="Stroke" Value="{StaticResource TriangleConnectorColor}" />
                        <Setter Property="Fill" Value="{StaticResource TriangleConnectorColor}" />
                    </DataTrigger>
                    <Trigger Property="IsMouseDirectlyOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard Name="HighlightConnection" Storyboard="{StaticResource HighlightConnection}" />
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="HighlightConnection" />
                        </Trigger.ExitActions>
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Opacity" Value="{Binding Source={StaticResource ConnectionAnimationPlaceholder}, Path=Opacity}" />
                <Setter Property="Stroke" Value="{DynamicResource Connection.StrokeBrush}" />
                <Setter Property="Fill" Value="{DynamicResource Connection.StrokeBrush}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="ToolTip" Value="Double click to split" />
                <Setter Property="Source" Value="{Binding Output.Anchor}" />
                <Setter Property="Target" Value="{Binding Input.Anchor}" />
                <Setter Property="SplitCommand" Value="{Binding SplitCommand}" />
                <Setter Property="DisconnectCommand" Value="{Binding DisconnectCommand}" />
                <Setter Property="SourceOffsetMode" Value="{Binding ConnectionSourceOffsetMode, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="TargetOffsetMode" Value="{Binding ConnectionTargetOffsetMode, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="SourceOffset" Value="{Binding ConnectionSourceOffset.Size, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="TargetOffset" Value="{Binding ConnectionTargetOffset.Size, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="ArrowSize" Value="{Binding ConnectionArrowSize.Size, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="ArrowEnds" Value="{Binding ArrowHeadEnds, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="ArrowShape" Value="{Binding ArrowHeadShape, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="Spacing" Value="{Binding ConnectionSpacing, Source={x:Static local:EditorSettings.Instance}}" />
                <Setter Property="Direction" Value="{Binding Output.Flow, Converter={StaticResource FlowToDirectionConverter}}" />
                <Setter Property="Text" Value="{Binding ConnectionText, Source={x:Static local:EditorSettings.Instance}}" />
            </Style>

            <DataTemplate x:Key="CircuitConnectionTemplate">
                <nodify:CircuitConnection Angle="{Binding CircuitConnectionAngle, Source={x:Static local:EditorSettings.Instance}}" Style="{StaticResource ConnectionStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="ConnectionTemplate">
                <nodify:Connection Style="{StaticResource ConnectionStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="LineConnectionTemplate">
                <nodify:LineConnection Style="{StaticResource ConnectionStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="PendingConnectionTemplate" DataType="{x:Type local:PendingConnectionViewModel}">
                <nodify:PendingConnection
                    CompletedCommand="{Binding DataContext.CreateConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                    IsVisible="{Binding IsVisible}"
                    Source="{Binding Source, Mode=OneWayToSource}"
                    StartedCommand="{Binding DataContext.StartConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                    Target="{Binding Target, Mode=OneWayToSource}"
                    TargetAnchor="{Binding TargetLocation, Mode=OneWayToSource}" />
            </DataTemplate>

            <ControlTemplate x:Key="SquareConnector" TargetType="Control">
                <Rectangle
                    Width="14"
                    Height="14"
                    Fill="{TemplateBinding Background}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeDashCap="Round"
                    StrokeEndLineCap="Round"
                    StrokeLineJoin="Round"
                    StrokeStartLineCap="Round"
                    StrokeThickness="2" />
            </ControlTemplate>

            <ControlTemplate x:Key="TriangleConnector" TargetType="Control">
                <Polygon
                    Width="14"
                    Height="14"
                    Fill="{TemplateBinding Background}"
                    Points="1,13 13,13 7,1"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeDashCap="Round"
                    StrokeEndLineCap="Round"
                    StrokeLineJoin="Round"
                    StrokeStartLineCap="Round"
                    StrokeThickness="2" />
            </ControlTemplate>

            <Storyboard x:Key="MarchingAnts">
                <DoubleAnimation
                    BeginTime="00:00:00"
                    RepeatBehavior="Forever"
                    Storyboard.TargetProperty="StrokeDashOffset"
                    From="1000"
                    To="0"
                    Duration="0:3:0" />
            </Storyboard>

            <Style
                x:Key="SelectionRectangleStyle"
                BasedOn="{StaticResource NodifyEditor.SelectionRectangleStyle}"
                TargetType="Rectangle">
                <Setter Property="StrokeDashArray" Value="4 4" />
                <Setter Property="StrokeThickness" Value="2" />
                <Style.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Storyboard="{StaticResource MarchingAnts}" />
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <nodify:NodifyEditor
            x:Name="Editor"
            AllowDrop="True"
            AutoPanEdgeDistance="{Binding AutoPanningEdgeDistance, Source={x:Static local:EditorSettings.Instance}}"
            AutoPanSpeed="{Binding AutoPanningSpeed, Source={x:Static local:EditorSettings.Instance}}"
            BringIntoViewMaxDuration="{Binding BringIntoViewMaxDuration, Source={x:Static local:EditorSettings.Instance}}"
            BringIntoViewSpeed="{Binding BringIntoViewSpeed, Source={x:Static local:EditorSettings.Instance}}"
            Connections="{Binding Connections}"
            DataContext="{Binding}"
            DisableAutoPanning="{Binding DisableAutoPanning, Source={x:Static local:EditorSettings.Instance}}"
            DisablePanning="{Binding DisablePanning, Source={x:Static local:EditorSettings.Instance}}"
            DisableZooming="{Binding DisableZooming, Source={x:Static local:EditorSettings.Instance}}"
            DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
            DisplayConnectionsOnTop="{Binding DisplayConnectionsOnTop, Source={x:Static local:EditorSettings.Instance}}"
            Drop="OnDropNode"
            EnableRealtimeSelection="{Binding EnableRealtimeSelection, Source={x:Static local:EditorSettings.Instance}}"
            GridCellSize="{Binding GridSpacing, Source={x:Static local:EditorSettings.Instance}}"
            ItemsSource="{Binding Nodes}"
            MaxViewportZoom="{Binding MaxZoom, Source={x:Static local:EditorSettings.Instance}}"
            MinViewportZoom="{Binding MinZoom, Source={x:Static local:EditorSettings.Instance}}"
            PendingConnection="{Binding PendingConnection}"
            SelectedItems="{Binding SelectedNodes}"
            SelectionRectangleStyle="{StaticResource SelectionRectangleStyle}"
            ViewportLocation="{Binding Location.Value, Source={x:Static local:EditorSettings.Instance}}"
            ViewportSize="{Binding ViewportSize, Mode=OneWayToSource}"
            ViewportZoom="{Binding Zoom, Source={x:Static local:EditorSettings.Instance}}">
            <nodify:NodifyEditor.Style>
                <Style BasedOn="{StaticResource {x:Type nodify:NodifyEditor}}" TargetType="{x:Type nodify:NodifyEditor}">
                    <Setter Property="ConnectionTemplate" Value="{StaticResource ConnectionTemplate}" />
                    <Setter Property="PendingConnectionTemplate" Value="{StaticResource PendingConnectionTemplate}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowGridLines, Source={x:Static local:PlaygroundSettings.Instance}}" Value="True">
                            <Setter Property="Background" Value="{StaticResource SmallGridLinesDrawingBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ConnectionStyle, Mode=TwoWay, Source={x:Static local:EditorSettings.Instance}}" Value="Line">
                            <Setter Property="ConnectionTemplate" Value="{StaticResource LineConnectionTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ConnectionStyle, Mode=TwoWay, Source={x:Static local:EditorSettings.Instance}}" Value="Circuit">
                            <Setter Property="ConnectionTemplate" Value="{StaticResource CircuitConnectionTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </nodify:NodifyEditor.Style>

            <nodify:NodifyEditor.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteSelectionCommand}" />
                <KeyBinding Key="C" Command="{Binding CommentSelectionCommand}" />
            </nodify:NodifyEditor.InputBindings>

            <nodify:NodifyEditor.Resources>
                <!--<Style BasedOn="{StaticResource {x:Type nodify:PendingConnection}}" TargetType="{x:Type nodify:PendingConnection}">
                    <Setter Property="CompletedCommand" Value="{Binding Graph.CreateConnectionCommand}" />
                    <Setter Property="Source" Value="{Binding Source, Mode=OneWayToSource}" />
                    <Setter Property="Target" Value="{Binding PreviewTarget, Mode=OneWayToSource}" />
                    <Setter Property="PreviewTarget" Value="{Binding PreviewTarget, Mode=OneWayToSource}" />
                    <Setter Property="Content" Value="{Binding PreviewText}" />
                    <Setter Property="EnablePreview" Value="{Binding EnablePendingConnectionPreview, Source={x:Static local:EditorSettings.Instance}}" />
                    <Setter Property="EnableSnapping" Value="{Binding EnablePendingConnectionSnapping, Source={x:Static local:EditorSettings.Instance}}" />
                    <Setter Property="AllowOnlyConnectors" Value="{Binding AllowConnectingToConnectorsOnly, Source={x:Static local:EditorSettings.Instance}}" />
                    <Setter Property="Direction" Value="{Binding Source.Flow, Converter={StaticResource FlowToDirectionConverter}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type nodify:PendingConnection}">
                                <Canvas>
                                    <nodify:Connection
                                        ArrowEnds="{Binding ArrowHeadEnds, Source={x:Static local:EditorSettings.Instance}}"
                                        ArrowShape="{Binding ArrowHeadShape, Source={x:Static local:EditorSettings.Instance}}"
                                        ArrowSize="{Binding ConnectionArrowSize.Size, Source={x:Static local:EditorSettings.Instance}}"
                                        Direction="{TemplateBinding Direction}"
                                        Source="{TemplateBinding SourceAnchor}"
                                        SourceOffset="{Binding ConnectionSourceOffset.Size, Source={x:Static local:EditorSettings.Instance}}"
                                        SourceOffsetMode="{Binding ConnectionSourceOffsetMode, Source={x:Static local:EditorSettings.Instance}}"
                                        Spacing="{Binding ConnectionSpacing, Source={x:Static local:EditorSettings.Instance}}"
                                        StrokeThickness="{TemplateBinding StrokeThickness}"
                                        Target="{TemplateBinding TargetAnchor}"
                                        TargetOffset="{Binding ConnectionTargetOffset.Size, Source={x:Static local:EditorSettings.Instance}}"
                                        TargetOffsetMode="None">
                                        <nodify:Connection.Style>
                                            <Style BasedOn="{StaticResource {x:Type nodify:Connection}}" TargetType="nodify:Connection">
                                                <Setter Property="Stroke" Value="{DynamicResource Connection.StrokeBrush}" />
                                                <Setter Property="Fill" Value="{DynamicResource Connection.StrokeBrush}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source.Shape}" Value="{x:Static local:ConnectorShape.Square}">
                                                        <Setter Property="Stroke" Value="{StaticResource SquareConnectorColor}" />
                                                        <Setter Property="Fill" Value="{StaticResource SquareConnectorColor}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Source.Shape}" Value="{x:Static local:ConnectorShape.Triangle}">
                                                        <Setter Property="Stroke" Value="{StaticResource TriangleConnectorColor}" />
                                                        <Setter Property="Fill" Value="{StaticResource TriangleConnectorColor}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </nodify:Connection.Style>
                                    </nodify:Connection>
                                    <Border
                                        Canvas.Left="{Binding TargetAnchor.X, RelativeSource={RelativeSource TemplatedParent}}"
                                        Canvas.Top="{Binding TargetAnchor.Y, RelativeSource={RelativeSource TemplatedParent}}"
                                        Margin="15"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3"
                                        Visibility="{Binding PreviewText, Converter={shared:StringToVisibilityConverter}}">
                                        <ContentPresenter />
                                    </Border>
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>-->

                <Style BasedOn="{StaticResource {x:Type nodify:Connector}}" TargetType="{x:Type nodify:Connector}">
                    <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                </Style>
                <!--  注释节点的样式：自定义注释节点的HeaderTemplate，用于输入和显示注释内容  -->
                <Style BasedOn="{StaticResource {x:Type nodify:GroupingNode}}" TargetType="{x:Type nodify:GroupingNode}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:CommentNodeViewModel}">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Margin="0,5,0,5" Text="Comment" />
                                    <TextBox
                                        AcceptsReturn="True"
                                        MaxLines="5"
                                        Text="{Binding Title, Mode=TwoWay}"
                                        TextBlock.LineHeight="18"
                                        TextWrapping="Wrap"
                                        VerticalScrollBarVisibility="Auto" />
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <Style BasedOn="{StaticResource {x:Type nodify:NodeInput}}" TargetType="{x:Type nodify:NodeInput}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Shape}" Value="{x:Static local:ConnectorShape.Square}">
                            <Setter Property="ConnectorTemplate" Value="{StaticResource SquareConnector}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SquareConnectorColor}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Margin="0,0,5,0" Text="{Binding Title}" />
                                            <TextBox
                                                MinWidth="30"
                                                Text="{Binding MaxConnections}"
                                                ToolTip="MaxConnections" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Shape}" Value="{x:Static local:ConnectorShape.Triangle}">
                            <Setter Property="ConnectorTemplate" Value="{StaticResource TriangleConnector}" />
                            <Setter Property="BorderBrush" Value="{StaticResource TriangleConnectorColor}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Text="{Binding Title}" />
                                            <ComboBox
                                                DisplayMemberPath="Name"
                                                ItemsSource="{Binding Shape, Converter={shared:EnumValuesConverter}}"
                                                SelectedValue="{Binding Shape}"
                                                SelectedValuePath="Value" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <TextBlock Text="{Binding Title}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Header" Value="{Binding}" />
                    <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                </Style>

                <Style BasedOn="{StaticResource {x:Type nodify:NodeOutput}}" TargetType="{x:Type nodify:NodeOutput}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Shape}" Value="{x:Static local:ConnectorShape.Square}">
                            <Setter Property="ConnectorTemplate" Value="{StaticResource SquareConnector}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SquareConnectorColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Shape}" Value="{x:Static local:ConnectorShape.Triangle}">
                            <Setter Property="ConnectorTemplate" Value="{StaticResource TriangleConnector}" />
                            <Setter Property="BorderBrush" Value="{StaticResource TriangleConnectorColor}" />
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Header" Value="{Binding Title}" />
                    <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                </Style>




                <DataTemplate DataType="{x:Type local:KnotNodeViewModel}">
                    <nodify:KnotNode Content="{Binding Connector}" />
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CommentNodeViewModel}">
                    <nodify:GroupingNode
                        ActualSize="{Binding Size}"
                        Header="{Binding Title}"
                        MovementMode="{Binding GroupingNodeMovement, Mode=TwoWay, Source={x:Static local:EditorSettings.Instance}}" />
                </DataTemplate>


            </nodify:NodifyEditor.Resources>

            <nodify:NodifyEditor.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type nodify:ItemContainer}}" TargetType="{x:Type nodify:ItemContainer}">
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="SelectedBorderThickness" Value="4" />
                    <Setter Property="CacheMode">
                        <Setter.Value>
                            <BitmapCache EnableClearType="True" RenderAtScale="{Binding MaxZoom, Source={x:Static local:EditorSettings.Instance}}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Location" Value="{Binding Location}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </nodify:NodifyEditor.ItemContainerStyle>


            <CompositeCollection>
                <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}" Location="{Binding Location}">
                    <local:NodesMenuView />
                </nodify:DecoratorContainer>
            </CompositeCollection>
        </nodify:NodifyEditor>

        <Grid
            Panel.ZIndex="-2"
            Background="{StaticResource LargeGridLinesDrawingBrush}"
            Visibility="{Binding ShowGridLines, Source={x:Static local:PlaygroundSettings.Instance}, Converter={shared:BooleanToVisibilityConverter}}" />



        <!--  TOOLBAR  -->
        <Border
            Grid.Column="1"
            Margin="0,5,0,5"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderThickness="0,0,0,1"
            CornerRadius="2"
            DataContext="{Binding}">
            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding PauseCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource IconButton}" TargetType="{x:Type Button}">
                            <Setter Property="Content" Value="{StaticResource PauseIcon}" />
                            <Setter Property="ToolTip" Value="Pause" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RunnerState}" Value="Stopped">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RunnerState}" Value="Paused">
                                    <Setter Property="Content" Value="{StaticResource UnpauseIcon}" />
                                    <Setter Property="ToolTip" Value="Continue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Command="{Binding RunCommand}" Style="{StaticResource IconButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Margin="0,0,4,0">
                            <ContentPresenter.Style>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="Content" Value="{StaticResource StopIcon}" />
                                    <Setter Property="ToolTip" Value="Stop" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RunnerState}" Value="Stopped">
                                            <Setter Property="Content" Value="{StaticResource RunIcon}" />
                                            <Setter Property="ToolTip" Value="Run" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                        <TextBlock Text="{Binding Title}" />
                    </StackPanel>
                </Button>

            </StackPanel>
        </Border>
    </Grid>

</UserControl>
